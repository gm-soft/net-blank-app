version: "3.4"

networks:
  logging-network:
    driver: bridge
  nba-network:
    driver: bridge

services:
  database.identity:
      container_name: nba-postgresql-13
      image: postgres:13
      restart: always
      environment:
        POSTGRES_USER: dbuser
        POSTGRES_PASSWORD: Str0ngPass!
        POSTGRES_DB: identity
        POSTGRES_ADMIN_PASSWORD: Str0ngPass!
      ports:
        - 5433:5432
      networks:
        - nba-network

  database.api:
    container_name: nba-postgresql-13
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: Str0ngPass!
      POSTGRES_DB: core
      POSTGRES_ADMIN_PASSWORD: Str0ngPass!
    ports:
      - 5432:5432
    networks:
      - nba-network

  identityserver:
    container_name: nba-identity-server
    image: nba/nbaidentityserver
    restart: "no"
    depends_on:
      - database.identity
      - elasticsearch
    build:
      context: ./src
      dockerfile: Dockerfile_Identity
    environment:
      ASPNETCORE_Kestrel__Certificates__Default__Password: password
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:44393
      ASPNETCORE_HTTPS_PORT: 44393
      ElasticSearch:ConnectionString: http://elasticsearch:9200
      MessageBroker:Host: kafka:9094
      IssuerUri: https://identityserver
      ConnectionStrings:DefaultConnection: Host=database.identity;Database=identity;User Id=dbuser;Password=Str0ngPassword!
    ports:
      - 44393:44393
    networks:
      - nba-network
    volumes:
      - ~/.aspnet/https:/https:ro

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - nba-network
      - logging-network

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.5.2
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    environment:
      SERVER_NAME: kibana.local
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - nba-network
      - logging-network

  rabbitmq:
    restart: always
    image: rabbitmq:3.8.9-management
    container_name: nba-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - nba-network

  zookeeper:
    container_name: nba-zookeeper
    restart: always
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - nba-network

  kafka:
    container_name: nba-kafka
    image: wurstmeister/kafka
    restart: always
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - nba-network

volumes:
  elasticsearch-data:
